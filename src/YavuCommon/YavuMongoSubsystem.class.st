Class {
	#name : #YavuMongoSubsystem,
	#superclass : #YavuStoredSubsystem,
	#instVars : [
		'repository'
	],
	#classInstVars : [
		'repository'
	],
	#category : #'YavuCommon-Environment'
}

{ #category : #accessing }
YavuMongoSubsystem class >> repository [ 

	repository ifNil: [ 
		repository := VOMongoRepository host: '127.0.0.1' database: YavuEnvironment current mongoDatabaseName.		
	   repository enableSingleton.
		 ].
	^ repository

	
]

{ #category : #initialization }
YavuMongoSubsystem >> initialize [ 

	self halt.
	super initialize.
	repository := VOMongoRepository host: '127.0.0.1' database: YavuEnvironment current mongoDatabaseName
]

{ #category : #'as yet unclassified' }
YavuMongoSubsystem >> instancesOf: aClass [ 
	
	^self repository selectAll: aClass
]

{ #category : #'as yet unclassified' }
YavuMongoSubsystem >> instancesOfClass: aClass from: startDate to: anotherDate entities: aCollection [ 
	
	^ repository selectMany: aClass where: [ :each | 
		(each at: 'entity.__id') = (repository idOf: aCollection first )
		]
		

		"repository selectMany: aClass where: [:each | 
			(aCollection includes: each entity)
				and: [each date between: startDate and: anotherDate ] ]"
			
		"(self repository selectAll: aClass) select: [:each | 
			(aCollection includes: each entity) and: [each date between: startDate and: anotherDate ] ]"
]

{ #category : #'as yet unclassified' }
YavuMongoSubsystem >> instancesOfClass: aClass withEntity: aYavuSupplier [ 
	
	^ repository selectMany: aClass where: [ :each | 
		(each at: 'entity.__id') = (repository idOf: aYavuSupplier )
		]
]

{ #category : #'As yet unclassified' }
YavuMongoSubsystem >> remove: aYavuObject [ 
	
	self halt.
	self repository remove: aYavuObject
]

{ #category : #'as yet unclassified' }
YavuMongoSubsystem >> repository [

	"self class repository".
	
	^ repository 
]

{ #category : #'as yet unclassified' }
YavuMongoSubsystem >> save: aYavuObject [ 
	
	self repository save: aYavuObject
]

{ #category : #'as yet unclassified' }
YavuMongoSubsystem >> update: aYavuObject [ 
	
	self repository save: aYavuObject 
]
